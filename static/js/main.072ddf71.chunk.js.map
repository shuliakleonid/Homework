{"version":3,"sources":["p2-homeworks/h5/header.module.css","p2-homeworks/h1/Alternative.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/AlternativeAffairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/AlternativeAffair.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h6/HW6.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/AlternativeAffair.tsx","p2-homeworks/h2/AlternativeAffairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","classes","post","img","src","avatar","alt","info","name","message","time","AlternativeMessage","wrapper","bubble","txt","arrow","messageData","alternativeMessageData","Date","toLocaleString","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","buttonValue","event","setFilter","currentTarget","textContent","toLowerCase","AffairAlternative","card","toggleCheckBox","checked","onChange","checkbox","type","done","button","AlternativeAffairs","mappedAlternativeAffairs","item","useState","value","setInputValue","section","title","cards","length","onSubmit","preventDefault","trim","onCreate","input","target","addForm","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","i","filterAffairs","deleteAffair","toggleAffair","concat","now","addAffairs","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","normal","id","htmlFor","label","mistake","counter","GreetingContainer","users","addUserCallback","setName","setError","e","console","log","alert","HW3","setUsers","style","backgroundColor","newUsers","v1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","input_container","pattern","required","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","squaredFour","HW4","text","setText","showAlert","setChecked","column","blue","Boolean","PreJunior","Error404","PATH","Routes","exact","path","render","Junior","Header","header","link","to","activeClassName","linkSelected","HW5","SuperEditableSpan","onBlur","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","wrapperSpan","undefined","App","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.072ddf71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3R5eJ\",\"link\":\"header_link__Zz68-\",\"linkSelected\":\"header_linkSelected__2VWp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Alternative_wrapper__2LdYN\",\"img\":\"Alternative_img__2ySbh\",\"bubble\":\"Alternative_bubble__eupUg\",\"txt\":\"Alternative_txt__1tqfz\",\"name\":\"Alternative_name__1Zo5V\",\"message\":\"Alternative_message__zdA2f\",\"time\":\"Alternative_time__yfdFt\",\"arrow\":\"Alternative_arrow__1pnPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__wzQQv\",\"input\":\"Greeting_input__21ik_\",\"counter\":\"Greeting_counter__G64i8\",\"label\":\"Greeting_label__1Gbjx\",\"error\":\"Greeting_error__288HY\",\"normal\":\"Greeting_normal__2GsYb\",\"button\":\"Greeting_button__2MmwE\",\"mistake\":\"Greeting_mistake__1GZkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AlternativeAffairs_wrapper__3RknO\",\"section\":\"AlternativeAffairs_section__1eibE\",\"title\":\"AlternativeAffairs_title__2N3to\",\"cards\":\"AlternativeAffairs_cards__2Y-ja\",\"input\":\"AlternativeAffairs_input__K2OZ-\",\"addForm\":\"AlternativeAffairs_addForm__3MnOH\",\"button\":\"AlternativeAffairs_button__12ZC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__1zPQt\",\"img\":\"Message_img__EOztN\",\"info\":\"Message_info__1i1Va\",\"name\":\"Message_name__1ePd4\",\"message\":\"Message_message__3IFNQ\",\"time\":\"Message_time__3MEK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"AlternativeAffair_card__2wshT\",\"checkbox\":\"AlternativeAffair_checkbox__3qn3Z\",\"name\":\"AlternativeAffair_name__3gEaW\",\"button\":\"AlternativeAffair_button__1dFVl\",\"done\":\"AlternativeAffair_done__1E4Cm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SuperInputText_error__1uYt2\",\"input_container\":\"SuperInputText_input_container__o8qUH\",\"input\":\"SuperInputText_input__1J3ez\",\"label\":\"SuperInputText_label__36OgO\",\"errorInput\":\"SuperInputText_errorInput__2QP_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__3j5ad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__cxA_D\",\"red\":\"SuperButton_red__3JP65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperSpan\":\"HW6_wrapperSpan__Xhvu2\",\"wrapper\":\"HW6_wrapper__3B0zN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Ck26\"};","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\ntype TypeProps = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: TypeProps) {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img className={classes.img} src={props.avatar} alt=\"devil\"/>\r\n            <div className={classes.info}>\r\n                <p className={classes.name}>{props.name}</p>\r\n                <p className={classes.message}>{props.message}</p>\r\n                <p className={classes.time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport classes from './Alternative.module.css'\r\n\r\ntype TypeProps = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction AlternativeMessage(props: TypeProps) {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <img className={classes.img} src={props.avatar} alt=\"avatar\"/>\r\n            <div className={classes.bubble}>\r\n                <div className={classes.txt}>\r\n                    <p className={classes.name}>{props.name}</p>\r\n                    <p className={classes.message}>{props.message}</p>\r\n                    <span className={classes.time}>{props.time}</span>\r\n                </div>\r\n                <div className={classes.arrow}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlternativeMessage;\r\n","import React from 'react';\r\nimport Message from './Message';\r\nimport AlternativeMessage from './AlternativeMessage';\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n};\r\n\r\nlet showData: string = new Date().toLocaleString();\r\n\r\nconst alternativeMessageData = {\r\n    avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRcOD-VnlSroIYWcC3A6RD4GuwIS7z9hCUJaQ&usqp=CAU',\r\n    name: 'Smile',\r\n    message: 'All be fine!!!',\r\n    time: showData\r\n}\r\n\r\nfunction HW1() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n\r\n            <AlternativeMessage\r\n                avatar={alternativeMessageData.avatar}\r\n                name={alternativeMessageData.name}\r\n                message={alternativeMessageData.message}\r\n                time={alternativeMessageData.time}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from 'react';\r\n\r\ntype AffairPropsType = {\r\n  _id: number// key не нужно типизировать\r\n  affair: string // need to fix any\r\n  deleteAffairCallback: (id: number) => void  // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n  const deleteCallback = () => {\r\n    props.deleteAffairCallback(props._id)\r\n  };// need to fix\r\n\r\n  return (\r\n      <div>\r\n        {props.affair}\r\n        <button onClick={\r\n          deleteCallback\r\n        }>X\r\n        </button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Affair;\r\n","import React from 'react';\r\nimport Affair from './Affair';\r\nimport {AffairPriorityType, AffairType, FilterType} from './HW2';\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n  data: AffairPriorityType\r\n  setFilter: (id:FilterType) => void\r\n  deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n  const mappedAffairs = props.data.map((a: AffairType) => (\r\n      <Affair // should work\r\n          key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n          affair={a.name}\r\n          deleteAffairCallback={props.deleteAffairCallback}\r\n          _id={a._id}\r\n      />\r\n  ))\r\n\r\n  const buttonValue = (event:any) => {\r\n    props.setFilter(event.currentTarget.textContent.toLowerCase())\r\n  }\r\n  // const setAll = () => {}; // need to fix\r\n  // const setHigh = () => {};\r\n  // const setMiddle = () => {};\r\n  // const setLow = () => {};\r\n\r\n  return (\r\n      <div>\r\n        {mappedAffairs}\r\n        <button onClick={buttonValue}>All</button>\r\n        <button onClick={buttonValue}>High</button>\r\n        <button onClick={buttonValue}>Middle</button>\r\n        <button onClick={buttonValue}>Low</button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Affairs;\r\n","import React from 'react';\r\nimport classes from './AlternativeAffair.module.css'\r\n\r\ntype AffairPropsType = {\r\n  _id: number\r\n  affair: string\r\n  onChange: boolean\r\n  deleteAffairCallback: (id: number) => void\r\n  toggleCheckBox: (id: number) => void\r\n}\r\nconst AffairAlternative = (props: AffairPropsType) => {\r\n\r\n  const deleteAffair = () => {\r\n    props.deleteAffairCallback(props._id)\r\n  }\r\n\r\n  return (\r\n      <div className={classes.card}>\r\n        <input\r\n            onClick={() => {\r\n              props.toggleCheckBox(props._id)\r\n            }}\r\n            checked={props.onChange}\r\n            className={classes.checkbox}\r\n            type=\"checkbox\"/>\r\n        {props.onChange // это правильное решение как добавить класс на лету???\r\n            ? <span className={`${classes.name} ${classes.done}`}>{props.affair}</span>\r\n            : <span className={classes.name}>{props.affair}</span>\r\n        }\r\n        <div>\r\n          <button className={classes.button} onClick={deleteAffair}>X</button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default AffairAlternative\r\n","import React, {useState} from 'react';\r\nimport AffairAlternative from './AlternativeAffair';\r\nimport classes from './AlternativeAffairs.module.css'\r\nimport {AffairPriorityType, FilterType} from './HW2';\r\n\r\ntype AffairsPropsType = {\r\n  data: AffairPriorityType\r\n  setFilter: (filter: FilterType) => void\r\n  deleteAffairCallback: (id: number) => void\r\n  toggleCheckBox: (id: number) => void\r\n  onCreate: (value: string) => void\r\n}\r\n\r\nfunction AlternativeAffairs(props: AffairsPropsType) {\r\n  const mappedAlternativeAffairs =\r\n      props.data.map((item) => (\r\n          <AffairAlternative\r\n              key={item._id}\r\n              _id={item._id}\r\n              affair={item.name}\r\n              onChange={item.onChange}\r\n              deleteAffairCallback={props.deleteAffairCallback}\r\n              toggleCheckBox={props.toggleCheckBox}\r\n          />\r\n      ))\r\n\r\n  const [value, setInputValue] = useState('');\r\n  const submitHandler = (event: any) => {// не понятно какой тип у event!!!?\r\n    event.preventDefault() //  избавляемся от перерисовки\r\n    if (value.trim()) {\r\n      props.onCreate(value)\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className={classes.wrapper}>\r\n        <section className={classes.section}>\r\n          <div className={classes.title}>List Title</div>\r\n          <div className={classes.cards}>\r\n            {mappedAlternativeAffairs.length\r\n                ? mappedAlternativeAffairs\r\n                : <p>Write some Todo!</p>\r\n            }\r\n          </div>\r\n          <form onSubmit={submitHandler} className={classes.input}>\r\n            <input\r\n                onChange={event => setInputValue(event.target.value)}\r\n                value={value}\r\n                className={classes.addForm}\r\n            />\r\n            <button className={classes.button} type='submit'>Add</button>\r\n          </form>\r\n        </section>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AlternativeAffairs;\r\n","import React, {useState} from 'react';\r\nimport Affairs from './Affairs';\r\nimport AlternativeAffairs from './AlternativeAffairs';\r\n\r\n// types\r\nexport type AffairPriorityType = Array<AffairType>;// need to fix any\r\nexport type AffairType = {\r\n  _id: number\r\n  name: string\r\n  priority: string\r\n  onChange: boolean\r\n}; // need to fix any\r\n\r\nexport type FilterType = 'all' | 'high' | 'middle' | 'low';\r\n\r\n// constants\r\nconst defaultAffairs: AffairPriorityType = [ // need to fix any\r\n  {_id: 1, name: 'React', priority: 'high', onChange: true},\r\n  {_id: 2, name: 'anime', priority: 'low', onChange: true},\r\n  {_id: 3, name: 'games', priority: 'low', onChange: false},\r\n  {_id: 4, name: 'work', priority: 'high', onChange: false},\r\n  {_id: 5, name: 'html & css', priority: 'middle', onChange: true},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairPriorityType, filter: FilterType): AffairPriorityType => {\r\n  // need to fix any\r\n  if (filter === 'high') {\r\n    affairs = affairs.filter(i => i.priority === 'high')\r\n  }\r\n  if (filter === 'middle') {\r\n    affairs = affairs.filter(i => i.priority === 'middle')\r\n  }\r\n  if (filter === 'low') {\r\n    affairs = affairs.filter(i => i.priority === 'low')\r\n  }\r\n  return affairs;\r\n  // need to fix\r\n}\r\nexport const deleteAffair = (affairs: AffairPriorityType, _id: number): AffairPriorityType => { // need to fix any\r\n  return affairs = affairs.filter(i => i._id !== _id)// need to fix\r\n}\r\n\r\n// мапим массив для добавления изменения чекбокса\r\nconst toggleAffair = (affairs: AffairPriorityType, _id: number): AffairPriorityType => {\r\n  affairs = affairs.map((i) => {\r\n    if (i._id === _id) {\r\n      return {...i, onChange: !i.onChange}\r\n    }\r\n    return i;\r\n  })\r\n  return affairs\r\n}\r\n\r\n// добавляем новое дело\r\nconst addAffairs = (affairs: AffairPriorityType, value: string) => {\r\n  return affairs = affairs.concat([{\r\n    _id: Date.now(),\r\n    name: value,\r\n    priority: 'high',\r\n    onChange: false,\r\n  }])\r\n}\r\n\r\nfunction HW2() {\r\n  const [affairs, setAffairs] = useState<AffairPriorityType>(defaultAffairs); // need to fix any\r\n  const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n  const filteredAffairs = filterAffairs(affairs, filter);\r\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n// переключатель чекбокса\r\n  const toggleAffairCallback = (_id: number) => setAffairs(toggleAffair(affairs, _id))\r\n  // новое дело\r\n  const addTodoCallback = (value: string) => setAffairs(addAffairs(affairs, value))\r\n\r\n\r\n  return (\r\n      <div>\r\n        <hr/>\r\n        homeworks 2\r\n        {/*should work (должно работать)*/}\r\n        <Affairs\r\n            data={filteredAffairs}\r\n            setFilter={setFilter}\r\n            deleteAffairCallback={deleteAffairCallback}\r\n        />\r\n\r\n        <hr/>\r\n        {/*для личного творчества, могу проверить*/}\r\n        <AlternativeAffairs\r\n            data={filteredAffairs}\r\n            setFilter={setFilter}\r\n            deleteAffairCallback={deleteAffairCallback}\r\n            toggleCheckBox={toggleAffairCallback}\r\n            onCreate={addTodoCallback}\r\n        />\r\n        <hr/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HW2;\r\n","import React from 'react';\r\nimport s from './Greeting.module.css';\r\n\r\ntype GreetingPropsType = {\r\n  name: string // need to fix any\r\n  setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n  addUser: () => void // need to fix any\r\n  error: string // need to fix any\r\n  totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n  const inputClass = name.trim() ? s.normal : s.error; // need to fix with (?:)\r\n  return (\r\n      <div className={s.wrapper}>\r\n        <div className={s.input}>\r\n          <input\r\n              id='nameInput'\r\n              value={name}\r\n              onChange={setNameCallback}\r\n              className={inputClass}\r\n              type='text'\r\n              // placeholder='Enter your name'\r\n          />\r\n          <label htmlFor=\"nameInput\" className={s.label}>User name</label>\r\n        </div>\r\n        <span className={s.mistake} >{error}</span>\r\n        <button className={s.button} onClick={addUser}>Add User</button>\r\n        <span className={s.counter}>How much user is registry: {totalUsers}</span>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState} from 'react';\r\nimport Greeting from './Greeting';\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n  users: Array<UserType> // need to fix any\r\n  addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n  const [name, setName] = useState<string>(''); // need to fix any\r\n  const [error, setError] = useState<string>(''); // need to fix any\r\n\r\n  const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n    // setError(true)\r\n    console.log(e.target.value.trim())\r\n    setName(e.target.value); // need to fix\r\n  };\r\n  const addUser = () => {\r\n    if (name.trim()) {\r\n      alert(`Hello ${name.trim()} !`); // need to fix\r\n      addUserCallback(name)\r\n      setName('')\r\n      setError('')\r\n    }\r\n    if (!name.trim()) {\r\n      setError('Enter you name correct!')\r\n      // setError(false)\r\n      // alert('Write your name!')\r\n    }\r\n  };\r\n  const totalUsers = users.length; // need to fix\r\n\r\n  return (\r\n      <Greeting\r\n          name={name}\r\n          setNameCallback={setNameCallback}\r\n          addUser={addUser}\r\n          error={error}\r\n          totalUsers={totalUsers}\r\n      />\r\n  );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from 'react';\r\nimport GreetingContainer from './GreetingContainer';\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n  _id: string // need to fix any\r\n  name: string // need to fix any\r\n}\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n  const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n  const addUserCallback = (name: string) => { // need to fix any\r\n    if (name) {\r\n      const newUser: UserType = {_id: v1(), name: name};\r\n      const newUsers = [newUser, ...users]\r\n      setUsers(newUsers); // need to fix}\r\n    }\r\n  }\r\n  return (\r\n      <div style={{backgroundColor: '#fbfeff',}}>\r\n        <hr/>\r\n        homeworks 3\r\n        {/*should work (должно работать)*/}\r\n        <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n        <hr/>\r\n        {/*для личного творчества, могу проверить*/}\r\n        {/*<AlternativeGreeting/>*/}\r\n        <hr/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\r\nimport s from './SuperInputText.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n      type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n      onChange, onChangeText,\r\n      onKeyPress, onEnter,\r\n      error,\r\n      className, spanClassName,\r\n      ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n  console.log({...restProps}, 'restProps')\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange // если есть пропс onChange\r\n    && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n\r\n  }\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n    e.key === 'Enter' // если нажата кнопка Enter\r\n    && onEnter // и есть пропс onEnter\r\n    && onEnter(); // то вызвать его\r\n  }\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n  const finalInputClassName = `${error}`\r\n      ? `${s.errorInput} ${s.input}`\r\n      : `${s.input} ${className}`;\r\n  ; // need to fix with (?:) and s.superInput\r\n\r\n  return (\r\n      <div className={s.input_container}>\r\n        <input\r\n            type={'text'}\r\n            onChange={onChangeCallback}\r\n            onKeyPress={onKeyPressCallback}\r\n            className={finalInputClassName}\r\n            id=\"name\"\r\n            pattern=\".+\"\r\n            required\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n        />\r\n        <label className={s.label} htmlFor=\"name\">Text</label>\r\n        {error && <span className={finalSpanClassName}>{error}</span>}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './SuperButton.module.css';\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n      red, className,\r\n      ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n  const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n  return (\r\n      <button\r\n          className={finalClassName}\r\n          {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n      />\r\n  );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './SuperCheckbox.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n      type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n      onChange, onChangeChecked,\r\n      className, spanClassName,\r\n      children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n      ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (onChange) {\r\n      onChange(e)\r\n    }\r\n    if (onChangeChecked) {\r\n      onChangeChecked(e.currentTarget.checked)\r\n    }\r\n    // сделайте так чтоб работал onChange и onChangeChecked\r\n  }\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n  return (\r\n      <div className={s.squaredFour}>\r\n        <input\r\n            type={'checkbox'}\r\n            onChange={onChangeCallback}\r\n            className={finalInputClassName}\r\n            id={'squaredFour'}\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n        />\r\n        <label htmlFor='squaredFour'>\r\n          {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n      </div>// благодаря label нажатие на спан передастся в инпут\r\n  );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText';\r\nimport s from './HW4.module.css';\r\nimport SuperButton from './common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox';\r\n\r\nfunction HW4() {\r\n  const [text, setText] = useState<string>('');\r\n  const error = text.trim() ? '' : 'Write some task';\r\n\r\n  const showAlert = () => {\r\n    if (error) {\r\n      alert('введите текст...');\r\n    } else {\r\n      alert(text); // если нет ошибки показать текст\r\n    }\r\n    setText('')\r\n  }\r\n\r\n  const [checked, setChecked] = useState<boolean>(false);\r\n  const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    return setChecked(e.currentTarget.checked)\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <hr/>\r\n        homeworks 4\r\n        <div className={s.column}>\r\n          {/*should work (должно работать)*/}\r\n          <SuperInputText\r\n              value={text}\r\n              onChangeText={setText}\r\n              onEnter={showAlert}\r\n              error={error}\r\n              className={s.blue} // проверьте, рабоет ли смешивание классов\r\n          />\r\n          {/*should work (должно работать)*/}\r\n          <SuperButton\r\n              red={Boolean(text)} // пропсу с булевым значением не обязательно указывать true\r\n              onClick={showAlert}\r\n          >\r\n            delete {/*// название кнопки попадёт в children*/}\r\n          </SuperButton>\r\n          {/*should work (должно работать)*/}\r\n          <SuperCheckbox\r\n              checked={checked}\r\n              onChangeChecked={setChecked}\r\n          >\r\n            some text {/*// этот текст попадёт в children*/}\r\n          </SuperCheckbox>\r\n          {/*// onChange тоже должен работать*/}\r\n          <SuperCheckbox checked={checked} onChange={testOnChange}>\r\n            Smile\r\n          </SuperCheckbox>\r\n        </div>\r\n        <hr/>\r\n        {/*для личного творчества, могу проверить*/}\r\n        {/*<AlternativeSuperInputText/>*/}\r\n        {/*<AlternativeSuperButton/>*/}\r\n        {/*<AlternativeSuperCheckbox/>*/}\r\n        <hr/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз\r\n","import React from 'react';\r\n\r\nfunction Error404() {\r\n  return (\r\n      <div>\r\n        <img src=\"https://www.idesign.com.mt/wp-content/uploads/2015/10/404new.png\"/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            {/*<HW1/>*/}\r\n            <HW2/>\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз\r\n","import React from \"react\";\r\nimport PreJunior from './pages/PreJunior';\r\nimport Error404 from './pages/Error404';\r\nimport {Switch,Route} from 'react-router-dom'\r\nimport Junior from './pages/Junior';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    BUTTON: \"/button\",\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n            <Route exact path={\"/\"}  render={()=><PreJunior/>}/>\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.BUTTON} render={() => <PreJunior/>}/>\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {PATH} from './Routes';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={style.header}>\r\n          <NavLink   className={style.link} to={PATH.PRE_JUNIOR} activeClassName={style.linkSelected}>\r\n            PreJunior\r\n          </NavLink>\r\n          <NavLink className={style.link} to={PATH.JUNIOR} activeClassName={style.linkSelected}>\r\n            Junior\r\n          </NavLink>\r\n          <NavLink className={style.link} to={'/FOUND'} activeClassName={style.linkSelected}>\r\n           Button\r\n          </NavLink>\r\n          <NavLink className={style.link} to={'/FOUN'} activeClassName={style.linkSelected} >\r\n          Social Network\r\n          </NavLink>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n            <Header/>\r\n            <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React, {DetailedHTMLProps, HTMLAttributes, InputHTMLAttributes, useState} from 'react';\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n      onChangeText,\r\n      autoFocus, // игнорировать изменение этого пропса\r\n      onBlur,\r\n      onEnter,\r\n      spanProps,\r\n\r\n      ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n  const onEnterCallback = () => {\r\n    // setEditMode(); // выключить editMode при нажатии Enter\r\n    setEditMode(false)\r\n    onEnter && onEnter();\r\n  };\r\n\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n    setEditMode(false)\r\n    onBlur && onBlur(e);\r\n    onChangeText && onChangeText(e.target.value)\r\n\r\n  };\r\n\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    // setEditMode(); // включить editMode при двойном клике\r\n\r\n    setEditMode(true)\r\n    onDoubleClick && onDoubleClick(e);\r\n  };\r\n\r\n  const spanClassName = `${'сделать красивый стиль для спана'} ${className}`;\r\n\r\n  return (\r\n      <>\r\n        {editMode\r\n            ? (\r\n                <SuperInputText\r\n                    autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                    onBlur={onBlurCallback}\r\n                    onEnter={onEnterCallback}\r\n                    onChangeText={onChangeText}\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            ) : (\r\n                <span\r\n                    onDoubleClick={onDoubleClickCallBack}\r\n                    className={spanClassName}\r\n                    {...restSpanProps}\r\n                >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                  {children || restProps.value}\r\n                    </span>\r\n            )\r\n        }\r\n      </>\r\n  );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from 'react';\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport {restoreState, saveState} from './localStorage/localStorage';\r\nimport style from './HW6.module.css'\r\n\r\nfunction HW6() {\r\n  const [value, setValue] = useState<string>('');\r\n  const save = () => {\r\n    saveState<string>('editable-span-value', value);\r\n    setValue('')\r\n  };\r\n  const restore = () => {\r\n    setValue(restoreState('editable-span-value', value))\r\n    // setValue();\r\n  };\r\n\r\n  return (\r\n      <div className={style.wrapper}>\r\n        <hr/>\r\n        homeworks 6\r\n        {/*should work (должно работать)*/}\r\n        <div className={style.wrapperSpan}>\r\n          <SuperEditableSpan\r\n              value={value}\r\n              onChangeText={setValue}\r\n              spanProps={{children: value ? undefined : 'enter text...'}}\r\n          />\r\n        </div>\r\n        <SuperButton onClick={save}>save</SuperButton>\r\n        <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n        <hr/>\r\n        {/*для личного творчества, могу проверить*/}\r\n        {/*<AlternativeSuperEditableSpan/>*/}\r\n        <hr/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HW6;\r\n","import React from 'react';\r\nimport s from './App.module.css';\r\nimport HW1 from '../../../p2-homeworks/h1/HW1';\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\nimport HW6 from '../../../p2-homeworks/h6/HW6';\r\n\r\nfunction App() {\r\n  return (\r\n      <div className={s.App}>\r\n        <div>react homeworks:</div>\r\n        <HW1/>\r\n        <HW2/>\r\n        <HW3/>\r\n        <HW4/>\r\n        <HW5/>\r\n        <HW6/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}